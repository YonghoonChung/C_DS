시간 복잡도 (Big-O표기법)
    알고리즘이 문제를 해결하는 데에 걸리는 시간

    최악의 경우를 계산하는 방식 (아무리 많이 걸려도 이시간에는 끝난다.)

    O(n)
    O(n^2)
    O(log n)

hash
    해싱법(hashing)
        데이터를 저장할 위치(인덱스)를 간단한 연산으로 도출하는 것

        탐색하는데에 수행해야 하는 반복은 최대 상수번이다

        시간복잡도 : O(1)

    해시 함수
        저장할 요소를 적절한 인덱스(해시 값)로 변환시켜주는 함수
        저장하려는 데이터를 해시 테이블의 크기로 나눈 나머지의 값을 해시 값으로 하여 저장하는 방법

    해시 테이블

    버킷

    해싱의 문제점 -> 충돌이 일어난다 -> 결국 데이터 손실
    -> 해결책 : 충돌회피
        1. 개방 주소법
            cluster
                데이터들이 모여 있는 군집
                Cluster가 크면 시간 복잡도 증가
                -> 해결법:  원래 자리의 1**2에 들어간다, 그곳에도 차 잇다면 2**2
            마지막 버킷의 다음은 0번째이다
            
            HashTable이 가득 차면 용략을 더 증가시킨다.
        2.체인법
            충돌 발생시 해당 버킷이 발생가능한 요소를 리스트로 연결하는 형태
            linked list, list 사용가능

    문자열 해싱
        Addictive hash function : 문자열 각각을 아스키 코드로 모두 더한 뒤 나머지 연산을 진행하는 방법

------------------
c언어는 오버로딩이 가능한가